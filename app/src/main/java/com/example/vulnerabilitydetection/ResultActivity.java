package com.example.vulnerabilitydetection;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.StringRequest;
import com.android.volley.toolbox.Volley;

import org.json.JSONException;
import org.json.JSONObject;

import java.util.HashMap;
import java.util.Map;

import pl.droidsonroids.gif.GifImageView;

public class ResultActivity extends AppCompatActivity {
     TextView result;
     Map<String,String> params;
     String genre;
         GifImageView g1;
    Map<String,String> categories;
    String url="https://vulnerimad.onrender.com/predict";
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_result);
        getSupportActionBar().setTitle("Result");
        g1 = (GifImageView) findViewById(R.id.g1);

        result=(TextView) findViewById(R.id.result);
        Intent i=getIntent();
        params=(HashMap<String,String>)i.getSerializableExtra("VulnerTest");
        genre=(String)params.remove("MyGenre");


        Log.e("ResultActivity",genre);


        for (Map.Entry<String,String> entry : params.entrySet()) {
            Log.e("ResultActivity", "Key = " + entry.getKey() +
                    ", Value = " + entry.getValue());

        }
        Log.e("ResultActivity","params="+params.size());

        /**
         * Categories Map-Value Pair
         */
        categories=new HashMap<String,String>();

        categories.put("8", "Business");
        categories.put("24","Maps & Navigation");
        categories.put("40","Tools");
        categories.put("2","Arcade");
        categories.put("6","Board");
        categories.put("3","Art & Design");
        categories.put("43","Video Players & Editors");
        categories.put("11","Casual");
        categories.put("18","Finance");
        categories.put("4","Auto & Vehicles");
        categories.put("31","Productivity");
        categories.put("27","News & Magazines");
        categories.put("7","Books & Reference");
        categories.put("15", "Education");
        categories.put( "9", "Card");
        categories.put("32","Puzzle");
        categories.put("5", "Beauty");
        categories.put("30","Photography");
        categories.put("1","Adventure");
        categories.put("34","Role Playing");
        categories.put("0","Action");
        categories.put("39","Strategy");
        categories.put( "29","Personalization");
        categories.put( "28", "Parenting");
        categories.put("26","Music & Audio");
        categories.put("25", "Medical");
        categories.put("35","Shopping");
        categories.put( "36", "Simulation");
        categories.put( "33","Racing");
        categories.put("38","Sports");
        categories.put("16","Entertainment");
        categories.put("44","Weather");
        categories.put(  "42", "Trivia");
        categories.put(  "45", "Word");
        categories.put("12", "Comics");
        categories.put( "19", "Food & Drink");
        categories.put( "37","Social");
        categories.put( "41","Travel & Local");
        categories.put("17", "Events");
        categories.put("23", "Lifestyle");
        categories.put("14","Dating");
        categories.put( "13", "Communication");
        categories.put( "22","Libraries & Demo");
        categories.put( "21","House & Home");
        categories.put( "20","Health & Fitness");
        categories.put(  "10","Casino");


        int flag=0;
        for (Map.Entry<String,String> mapElement : params.entrySet()) {

            if(mapElement.getValue().equalsIgnoreCase("1")){
                flag=1;
            }
        }

        if(flag==1)
        callAPI();
        else{
            result.setText("Not Vulnerable");
            g1.setBackgroundResource(R.drawable.check);
            result.setShadowLayer(3,4,4, Color.parseColor("#9FEF00"));
        }

    }

    public void callAPI(){
        // hit the API -> Volley
        StringRequest stringRequest = new StringRequest(Request.Method.POST, url,
                new Response.Listener<String>() {
                    @Override
                    public void onResponse(String response) {

                        try {
                            JSONObject jsonObject = new JSONObject(response);
                            String data = jsonObject.optString("Genre");
                            Log.e("ResultActivity","API");
                            Log.e("ResultActivity",categories.get(data));
                            if(genre.equalsIgnoreCase(categories.get(data))){

                                Log.e("ResultActivity","Not Vulner");
                                result.setText("Not Vulnerable");
                                g1.setBackgroundResource(R.drawable.check);
                                result.setShadowLayer(3,4,4, Color.parseColor("#9FEF00"));


                            }else{
                                Log.e("ResultActivity","Vulner");
                                result.setText("Vulnerable");
                                g1.setBackgroundResource(R.drawable.cross1);


                            }
                        } catch (JSONException e) {
                            e.printStackTrace();
                        }

                    }
                },
                new Response.ErrorListener() {
                    @Override
                    public void onErrorResponse(VolleyError error) {
//                        Toast.makeText(ResultActivity.this, error.getMessage()+"hii", Toast.LENGTH_SHORT).show();
                    }
                }){

            @Override
            protected Map<String,String> getParams(){
//                Map<String,String> params = new HashMap<String,String>();
//                params.put("Location","1");
//                params.put("Personal info","0");
//                params.put("Financial info","1");
//                params.put("Health and Fitness","0");
//                params.put("Messages","1");
//                params.put("Photos and videos","0");
//                params.put("Audio","0");
//                params.put("Files and docs","0");
//                params.put("Contacts","1");
//                params.put("App activity","0");
//                params.put("App info and performance","1");
//                params.put("Device or other IDs","0");
//


                return params;
            }

        };
        RequestQueue queue = Volley.newRequestQueue(ResultActivity.this);
        queue.add(stringRequest);
    }
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menu_type_custom, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            case R.id.action_home:
                Intent i=new Intent(ResultActivity.this,MainActivityOrigin.class);
                startActivity(i);
                finish();
                return true;

        }
        return super.onOptionsItemSelected(item);
    }
}