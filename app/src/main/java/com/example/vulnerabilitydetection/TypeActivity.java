package com.example.vulnerabilitydetection;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.TextView;

import java.util.ArrayList;

public class TypeActivity extends AppCompatActivity {
ListView listView;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_type);
        getSupportActionBar().setTitle("Type of Data");
        Intent i = getIntent();
        Bundle b = i.getExtras();
        ArrayList<SharedData> s = (ArrayList<SharedData>) b.getSerializable("DataSafetyS");
        ArrayList<CollectedData> c = (ArrayList<CollectedData>) b.getSerializable("DataSafetyC");
        ArrayList<SecurityPractices> sec = (ArrayList<SecurityPractices>) b.getSerializable("DataSafetySec");

        listView = (ListView) findViewById(R.id.typeList);
        ArrayList<Type> typeList = new ArrayList<Type>();
        TextView mEmptyTextView = (TextView) findViewById(R.id.empty_view_type);
        listView.setEmptyView(mEmptyTextView);

        if (s != null) {
            for (int j = 0; j < s.size(); j++) {
                typeList.add(new Type(s.get(j).getType()));
            }
            ArrayAdapter<Type> adapter = new TypeAdapter(this,  typeList);
            listView.setAdapter(adapter);
            if (adapter.isEmpty()) {
                mEmptyTextView.setText(R.string.no_data_shared);
            }
        }
        else if(c!=null){
            for (int j = 0; j < c.size(); j++) {
                typeList.add(new Type(c.get(j).getType()));
            }
            ArrayAdapter<Type> adapter = new TypeAdapter(this, typeList);
            listView.setAdapter(adapter);
            if (adapter.isEmpty()) {
                mEmptyTextView.setText(R.string.no_data_collected);
            }
        }
        else if(sec!=null){
            for (int j = 0; j < sec.size(); j++) {
                typeList.add(new Type(sec.get(j).getPractice()));
            }
            ArrayAdapter<Type> adapter = new TypeAdapter(this,typeList);
            listView.setAdapter(adapter);
            if (adapter.isEmpty()) {
                mEmptyTextView.setText(R.string.no_security_practice);
            }
        }
        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {

                Intent i=new Intent(TypeActivity.this,DataActivity.class);
                 if(s!=null){
                     i.putStringArrayListExtra("data",s.get(position).getData());
                     i.putStringArrayListExtra("purpose",s.get(position).getPurpose());
                     startActivity(i);
                 }
                 else  if(c!=null){

                     i.putStringArrayListExtra("data",c.get(position).getData());
                     i.putStringArrayListExtra("purpose",c.get(position).getPurpose());
                     startActivity(i);
                 }
                 else  if(sec!=null){
                     i.putExtra("practice",sec.get(position).getPractice());
                     i.putStringArrayListExtra("purpose",sec.get(position).getDescription());
                     startActivity(i);
                 }


            }
        });
    }
    public boolean onCreateOptionsMenu(Menu menu) {

        getMenuInflater().inflate(R.menu.menu_type_custom, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {

        switch (item.getItemId()) {
            case R.id.action_home:
                Intent i=new Intent(TypeActivity.this,MainActivityOrigin.class);
                startActivity(i);
                finish();
                return true;

        }
        return super.onOptionsItemSelected(item);
    }

}