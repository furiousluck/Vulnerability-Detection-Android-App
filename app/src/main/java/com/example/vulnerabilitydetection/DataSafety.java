package com.example.vulnerabilitydetection;

import static android.view.View.GONE;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.cardview.widget.CardView;

import android.app.LoaderManager;
import android.content.Loader;
import android.content.Intent;
import android.net.ConnectivityManager;
import android.net.Uri;
import android.os.Bundle;

import android.util.Log;
import android.view.View;


import android.content.Context;


import java.util.ArrayList;

public class DataSafety extends AppCompatActivity  implements LoaderManager.LoaderCallbacks<DataSafetyComponents> {
    public static final int APP_LOADER_ID=1;
    String packageName;
    CardView shared;
    CardView collected;
    CardView security;
    CardView policy;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        getSupportActionBar().hide();

        setContentView(R.layout.activity_data_safety);
        Intent i = getIntent();
        packageName=i.getStringExtra("MainActivity");
        Log.e("Data Safety",packageName+"tt");


        ConnectivityManager conMgr = (ConnectivityManager) getSystemService (Context.CONNECTIVITY_SERVICE);
        if(conMgr.getActiveNetworkInfo()!=null&&conMgr.getActiveNetworkInfo().isConnected()&&conMgr.getActiveNetworkInfo().isAvailable())
            getLoaderManager().initLoader(APP_LOADER_ID,null,this);
        shared=(CardView) findViewById(R.id.sharedData);
        collected=(CardView) findViewById(R.id.collectedData);
        security=(CardView) findViewById(R.id.securityPractices);
        policy=(CardView) findViewById(R.id.policy);
    }

    @NonNull
    @Override
    public Loader<DataSafetyComponents> onCreateLoader(int id, Bundle args) {
        Uri.Builder builder=new Uri.Builder();
        builder.scheme("https")
                .authority("gplayapi.srik.me")
                .path("api")
                .appendPath("apps")
                .appendPath("")
                .appendPath(packageName)
                .appendPath("dataSafety");
        Uri addressUri=builder.build();
        String packageUriString=addressUri.toString();
        AppLoader loader = new AppLoader(this, packageUriString);
        return loader;
    }

    @Override
    public void onLoadFinished(@NonNull Loader<DataSafetyComponents> loader, DataSafetyComponents components) {
        if (components == null)
            return;
        Log.e("DataSafety",components.getSecurityPractices().size()+"");
        listener(components);

    }

    @Override
    public void onLoaderReset(@NonNull Loader<DataSafetyComponents> loader) {
        /**
         * Nothing to be done here
         */

    }

    void listener(DataSafetyComponents components){
        Log.e("Listener",components.getSecurityPractices().size()+"ss"+components.getCollectedData().size()+"ss"+components.getSharedData().size()+"");
        shared.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                Intent i=new Intent(DataSafety.this,TypeActivity.class);
                Bundle bundle=new Bundle();
                ArrayList<SharedData> s=new ArrayList<SharedData>(components.getSharedData());
                Log.e("ListenerClick",s.size()+"");
              bundle.putSerializable("DataSafetyS",s);
              i.putExtras(bundle);
                startActivity(i);

            }
        });
        collected.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent i=new Intent(DataSafety.this,TypeActivity.class);
                Bundle bundle=new Bundle();
                ArrayList<CollectedData> c=new ArrayList<CollectedData>(components.getCollectedData());
                Log.e("ListenerClick",c.size()+"");
                bundle.putSerializable("DataSafetyC",c);
                i.putExtras(bundle);
                startActivity(i);
            }
        });

        security.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent i=new Intent(DataSafety.this,TypeActivity.class);
                Bundle bundle=new Bundle();
                ArrayList<SecurityPractices> sec=new ArrayList<SecurityPractices>(components.getSecurityPractices());
                Log.e("ListenerClick",sec.size()+"");
                bundle.putSerializable("DataSafetySec",sec);
                i.putExtras(bundle);
                startActivity(i);

            }
        });

        policy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
               PrivacyPolicyUrl policy=components.getPrivacyPolicy();
               Log.e("privacy",policy.getPrivacyPolicyUrl());
                openPrivacyPolicy(policy.getPrivacyPolicyUrl());
            }
        });



    }
    public void openPrivacyPolicy(String url) {
        Uri webpage = Uri.parse(url);
        Intent intent = new Intent(Intent.ACTION_VIEW, webpage);
        if (intent.resolveActivity(getPackageManager()) != null) {
            startActivity(intent);
        }
    }

}